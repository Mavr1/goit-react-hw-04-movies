{"version":3,"sources":["components/movieDetails/MovieDetails.js","components/additionalInfoMenu/AdditionalInfoMenu.js","pages/MovieDetailsPage.js"],"names":["MovieDetails","poster","title","releaseDate","vote","overview","genres","className","src","alt","width","formatGenresArray","AdditionalInfoMenu","url","to","CastPage","lazy","ReviewsPage","MovieDetailsPage","state","movie","onGoBack","props","location","from","fromSearch","history","push","id","this","match","params","getMovie","then","data","setState","catch","error","console","log","vote_average","poster_path","release_date","onClick","fallback","path","component","Component"],"mappings":"2NA8BeA,EA3BM,SAAC,GAAD,IACnBC,EADmB,EACnBA,OACAC,EAFmB,EAEnBA,MACAC,EAHmB,EAGnBA,YACAC,EAJmB,EAInBA,KACAC,EALmB,EAKnBA,SACAC,EANmB,EAMnBA,OANmB,OAQnB,yBAAKC,UAAU,cACb,yBACEA,UAAU,cACVC,IAAG,0CAAqCP,GACxCQ,IAAI,eACJC,MAAO,MAET,yBAAKH,UAAU,oBACb,4BAAKL,GACL,4CAAkBC,GAClB,0CAAgBC,GAChB,wCACA,2BAAIC,GACJ,sCACA,2BAAIM,YAAkBL,O,OCXbM,EAXY,SAAC,GAAD,IAAGC,EAAH,EAAGA,IAAH,OACzB,wBAAIN,UAAU,uBACZ,wBAAIA,UAAU,2BACZ,kBAAC,IAAD,CAAMO,GAAE,UAAKD,EAAL,UAAR,SAEF,wBAAIN,UAAU,2BACZ,kBAAC,IAAD,CAAMO,GAAE,UAAKD,EAAL,aAAR,cCHAE,EAAWC,gBAAK,kBACpB,gCAEIC,EAAcD,gBAAK,kBACvB,gCAGIE,E,4MACJC,MAAQ,CAAEC,MAAO,I,EASjBC,SAAW,WACT,GAAI,EAAKC,MAAMC,SAASJ,MAAO,CAAC,IAAD,EACA,EAAKG,MAAMC,SAASJ,MAAzCK,EADqB,EACrBA,KAAMC,EADe,EACfA,WACd,EAAKH,MAAMI,QAAQC,KAAKH,EAAOC,QAE/B,EAAKH,MAAMI,QAAQC,KAAK,M,kEAZP,IAAD,OACVC,EAAOC,KAAKP,MAAMQ,MAAMC,OAAxBH,GACRI,YAASJ,GACNK,MAAK,SAACC,GAAD,OAAU,EAAKC,SAAS,CAAEf,MAAOc,EAAKA,UAC3CE,OAAM,SAACC,GAAD,OAAWC,QAAQC,IAAIF,Q,+BAYxB,IAAD,EAQHR,KAAKV,MAAMC,MANblB,EAFK,EAELA,MACAsC,EAHK,EAGLA,aACAnC,EAJK,EAILA,SACAC,EALK,EAKLA,OACAmC,EANK,EAMLA,YACAC,EAPK,EAOLA,aAEF,OACE,oCACGb,KAAKV,MAAMC,MAAMlB,OAChB,yBAAKK,UAAU,gBACb,4BAAQoC,QAASd,KAAKR,UAAtB,WACA,kBAAC,EAAD,CACEpB,OAAQwC,EACRvC,MAAOA,EACPC,YAAauC,EACbtC,KAAMoC,EACNnC,SAAUA,EACVC,OAAQA,IAEV,yBAAKC,UAAU,kBACb,sDACA,kBAAC,EAAD,CAAoBM,IAAKgB,KAAKP,MAAMQ,MAAMjB,MAC1C,kBAAC,WAAD,CAAU+B,SAAU,0CAClB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,mBAAmBC,UAAW/B,IAC1C,kBAAC,IAAD,CAAO8B,KAAK,sBAAsBC,UAAW7B,a,GA/ChC8B,aA0DhB7B","file":"static/js/MovieDetailsPage.1d67877e.chunk.js","sourcesContent":["import React from 'react';\r\nimport { formatGenresArray } from '../../services/helpers';\r\n\r\nconst MovieDetails = ({\r\n  poster,\r\n  title,\r\n  releaseDate,\r\n  vote,\r\n  overview,\r\n  genres,\r\n}) => (\r\n  <div className=\"movieAbout\">\r\n    <img\r\n      className=\"moviePoster\"\r\n      src={`https://image.tmdb.org/t/p/w500/${poster}`}\r\n      alt=\"movie poster\"\r\n      width={250}\r\n    />\r\n    <div className=\"movieDiscription\">\r\n      <h2>{title}</h2>\r\n      <p>Release date: {releaseDate}</p>\r\n      <p>User score: {vote}</p>\r\n      <h3>Overview</h3>\r\n      <p>{overview}</p>\r\n      <h4>Genres</h4>\r\n      <p>{formatGenresArray(genres)}</p>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default MovieDetails;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst AdditionalInfoMenu = ({ url }) => (\r\n  <ul className=\"additionalInfo-menu\">\r\n    <li className=\"additionalInfo-menuItem\">\r\n      <Link to={`${url}/cast`}>Cast</Link>\r\n    </li>\r\n    <li className=\"additionalInfo-menuItem\">\r\n      <Link to={`${url}/reviews`}>Reviews</Link>\r\n    </li>\r\n  </ul>\r\n);\r\n\r\nexport default AdditionalInfoMenu;\r\n","import React, { lazy, Suspense, Component } from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport { getMovie } from '../services/apiServices';\r\nimport MovieDetails from '../components/movieDetails/MovieDetails';\r\nimport AdditionalInfoMenu from '../components/additionalInfoMenu/AdditionalInfoMenu';\r\n\r\nconst CastPage = lazy(() =>\r\n  import('./CastPage' /* webpackChunkName: \"CastPage\" */)\r\n);\r\nconst ReviewsPage = lazy(() =>\r\n  import('./ReviewsPage' /* webpackChunkName: \"ReviewsPage\" */)\r\n);\r\n\r\nclass MovieDetailsPage extends Component {\r\n  state = { movie: {} };\r\n\r\n  componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    getMovie(id)\r\n      .then((data) => this.setState({ movie: data.data }))\r\n      .catch((error) => console.log(error));\r\n  }\r\n\r\n  onGoBack = () => {\r\n    if (this.props.location.state) {\r\n      const { from, fromSearch } = this.props.location.state;\r\n      this.props.history.push(from + fromSearch);\r\n    } else {\r\n      this.props.history.push('/');\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      title,\r\n      vote_average,\r\n      overview,\r\n      genres,\r\n      poster_path,\r\n      release_date,\r\n    } = this.state.movie;\r\n    return (\r\n      <>\r\n        {this.state.movie.title && (\r\n          <div className=\"movieDetails\">\r\n            <button onClick={this.onGoBack}>Go back</button>\r\n            <MovieDetails\r\n              poster={poster_path}\r\n              title={title}\r\n              releaseDate={release_date}\r\n              vote={vote_average}\r\n              overview={overview}\r\n              genres={genres}\r\n            />\r\n            <div className=\"additionalInfo\">\r\n              <h4>Additional Information</h4>\r\n              <AdditionalInfoMenu url={this.props.match.url} />\r\n              <Suspense fallback={<p>Loading...</p>}>\r\n                <Switch>\r\n                  <Route path=\"/movies/:id/cast\" component={CastPage} />\r\n                  <Route path=\"/movies/:id/reviews\" component={ReviewsPage} />\r\n                </Switch>\r\n              </Suspense>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MovieDetailsPage;\r\n"],"sourceRoot":""}